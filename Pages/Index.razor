@page "/"
@inject Services.RatingsService service;

<h1>Find player ratings on chess.com</h1>

<input placeholder="Player name" @bind="@playerName" />
<button @onclick="@UpdatePlayerName">Search</button>

@if (loading)
{
    <p>Fetching data...</p>
}
@if (result != null)
{
    @if (result.IsSuccess)
    {
        <p>Displaying data for @playerName</p>
        
        <table class="table">
            <thead>
                <tr>
                    <th>Game</th>
                    <th>Rating</th>
                    <th>Wins</th>
                    <th>Losses</th>
                    <th>Draws</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Blitz</td>
                    <td>@result.Data.chess_blitz.last.rating</td>
                    <td>@result.Data.chess_blitz.record.win</td>
                    <td>@result.Data.chess_blitz.record.loss</td>
                    <td>@result.Data.chess_blitz.record.draw</td>
                </tr>
            </tbody>
            <tbody>
                <tr>
                    <td>Bullet</td>
                    <td>@result.Data.chess_bullet.last.rating</td>
                    <td>@result.Data.chess_bullet.record.win</td>
                    <td>@result.Data.chess_bullet.record.loss</td>
                    <td>@result.Data.chess_bullet.record.draw</td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <p>No data found</p>
    }
}

@code {
    private RatingsCallResult result;
    private string playerName;
    private bool loading = false;

    private async Task UpdatePlayerName()
    {
        var callingTask = service.GetRatingsByPlayerName(playerName);
        loading = true;
        result = await callingTask;
        loading = false;
    }
}
